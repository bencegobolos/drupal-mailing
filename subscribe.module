<?php

/**
 * @file
 * Represents a block, where you can type in a valid e-mail address,
 * and sends an e-mail.
 */


/**
 * Implements hook_block_info().
 */
function subscribe_block_info() {
  $blocks['subscribe'] = array(
    'info' => t('subscribe'),
  );

  return $blocks;
}


/**
 * Implements hook_block_view().
 */
function subscribe_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'subscribe':
      $block['subject'] = t('Subscribe');
      $block['content'] = drupal_get_form('subscribe_subscribe_form');
      break;
  }

  return $block;
}


/**
 * Display a form in the block.
 */
function subscribe_subscribe_form($form, &$form_state) {
  $form = array();

  $form['email'] = array(
    '#type' => 'textfield',
    '#title' => 'Subscribe',
    '#size' => 25,
    '#required' => TRUE,
    '#description' => t('Type in your e-mail address.'),
    '#element_validate' => array('subscribe_element_validate_email'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Subscribe'),
  );

  return $form;
}


/**
 * Element validation for email addresses.
 */
function subscribe_element_validate_email($element){
  if (!valid_email_address($element['#value'])) {
    form_error($element, t('The e-mail address you specified is not valid.'));
  }
}


/**
 * Build a form for setting up the message.
 */
function subscribe_mail_subject_message(){
  $form['subscribe_recipient'] = array(
    '#type' => 'textfield',
    '#title' => t('Recipient'),
    '#default_value' => variable_get('subscribe_recipient', ini_get('sendmail_from')),
    '#element_validate' => array('subscribe_element_validate_email'),
  );

  $form['subscribe_subject'] = array(
    '#type' => 'textfield',
    '#title' => t('Subject'),
    '#default_value' => variable_get('subscribe_subject', t('Subscription')),
  );

  $form['subscribe_message'] = array(
    '#type' => 'textarea',
    '#title' => t('Message'),
    '#default_value' => variable_get('subscribe_message', t('Hi! !email subscribed.', array('!email' => '[email]'))),
    '#description' => t('Type \'[email]\' to use what the user typed in the block\'s input field.'),
  );

  return system_settings_form($form);
}


/**
 * Implements hook_menu().
 */
function subscribe_menu(){
  $items['admin/config/system/subscribe'] = array(
    'title' => 'Settings',
    'description' => 'Set target e-mail, subject and message to be sent.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('subscribe_mail_subject_message'),
    'access arguments' => array('administer site configuration'),
  );

  return $items;
}


/**
 * Form submission handler. Sends an e-mail.
 */
function subscribe_subscribe_form_submit($form, &$form_state){
  $params = array(
    'subscription_request_from' => $form_state['values']['email'],
  );

  drupal_mail(
    'subscribe',
    'email',
    variable_get('subscribe_recipient', ini_get('sendmail_from')),
    language_default(),
    $params
  );
}


/**
 * Implements hook_mail().
 */
function subscribe_mail($key, &$message, $params) {
  if ($key == 'email') {
    $message['body'][] = str_replace(
      '[email]',
      $params['subscription_request_from'],
      variable_get('subscribe_message', t('Hi! !email subscribed.', array('!email' => '[email]')))
    );
    $message['subject'] .= variable_get('subscribe_subject', t('Subscription'));
  }
}